- hosts: all
  become: true
  become_user: john
  vars:
     personal_projects: "{{ lookup('env', 'HOME') }}/PROJECTS"
     username: "{{ lookup('env', 'USER') }}"

  # Store password for chsh command
  vars_prompt:
   - name: "my_password"
     prompt: "Enter password"
     private: yes

  tasks:

   - import_tasks: ansible_personal_projects.yml
     tags:
     - plus

   - name: test
     shell: echo 'test'
     tags:
     - essentials

   - name: Check if oh my zsh exists
     stat:
       path: ~/.oh-my-zsh
     register: oh_my_zsh
     tags:
     - essentials

   - name: Downloading oh-my-zsh
     when: oh_my_zsh.stat.exists == False
     shell: wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh
     ignore_errors: true
     tags:
     - essentials

#   - name: Downloading zsh-completion
#     shell: git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions
#     register: zsh_completion
#     ignore_errors: true
#     tags:
#     - essentials

   - name: Install zsh plugin for zsh-autosuggestions
     ansible.builtin.git:
       repo: https://github.com/zsh-users/zsh-autosuggestions
       dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
     tags:
     - essentials

   - name: Install zsh plugin for zsh-autocomplete
     ansible.builtin.git:
       repo: https://github.com/marlonrichert/zsh-autocomplete
       dest: ~/.oh-my-zsh/custom/plugins/zsh-autocomplete
     tags:
     - essentials

   - name: Install Powerlevel10k
     ansible.builtin.git:
       repo: https://github.com/romkatv/powerlevel10k.git
       dest: ~/.oh-my-zsh/custom/themes/powerlevel10k
     tags:
     - essentials

#   - name: Downloading zsh-syntax-highlighting
#     shell: git clone https://github.com/zsh-users/zsh-syntax-highlighting.git

   - name: Cloning zsh-syntax-highlighting repo
     git:
       repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
       dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
     tags:
     - essentials

   - name: Set login shell of user {{ ansible_env.USER }} to `/bin/zsh` with `chsh` (case insensitve password string match)
     expect:
       command: "chsh -s /bin/zsh {{ username }}"
       responses:
         (?i)password: "{{ my_password }}"
       creates: ".shell_is_zsh"

# #     shell: chsh -s /usr/bin/zsh
#    - name: Change shell to zsh
#      shell: chsh -s `which zsh`
#      tags:
#      - essentials

